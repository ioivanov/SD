#ifndef stackDefDefined
#define stackDefDefined

#include <iostream>
using namespace std;

#include "stack.h"

int const EMPTY_STACK = -1; // ??????????? ?????? ????

template <class varType>
inline Stack<varType>::Stack() {
    sTop = EMPTY_STACK;
}

template <class varType>
inline bool Stack<varType>::empty() const {
    return sTop == EMPTY_STACK;
}

template <class varType>
inline varType Stack<varType>::top() const {
    if(empty()) {
        cout << "??????: ???? ?? ?????????? ? ?????? ????!\n";
        return 0;
    }

    return a[sTop];
}

template <class varType>
inline void Stack<varType>::push(varType const& x) {
    if(full()) {
        cout << "??????: ???? ?? ????????? ? ????? ????!\n";
    }
    else
        a[++sTop] = x;
}

template <class varType>
inline bool Stack<varType>::full() const {
    return sTop == MAX - 1;
}

template <class varType>
inline varType Stack<varType>::pop() {
    if(empty()) {
        cout << "??????: ???? ?? ?????????? ?? ?????? ????!\n";
        return 0;
    }
    return a[sTop--];
}

#endif
